<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.Domain.Common.Mapper.MemoMapper">
    <!-- 이 위치의 insertXML함수를 찾아서 적용 -->

    <insert id="insertXML"><!--안에 세미콜론 쓰면 동작 안 함-->
        insert into tbl_memo values(#{id},#{text},#{writer},#{createAt})
    </insert>
<!--    <update id="updateXML resultType="" parameterType=""">-->
    <update id="updateXML">
<!--    update tbl_memo set 바꿀컬럼명=값,바꿀컬럼명=값 where 기본키열=?-->
        update tbl_memo set text=#{text},writer=#{writer} where id=#{id}
    </update>
    <delete id="deleteXML">
<!--    delete from tbl_memo where id=#{id}    -->
        delete from tbl_memo where id=#{id}
    </delete>
<!--    Select-->
<!--    <select id="selectXML" resultType="반환자료형(메모Dto의 위치경로)" parameterType="파라미터 자료형">-->
    <select id="selectXML" resultType="com.example.demo.Domain.Common.Dto.MemoDto" parameterType="Long">
        select * from tbl_memo where id=#{id}
    </select>
<!--    selectAll 파라미터 자료형 필요 없음-->
    <select id="selectAllXML" resultType="com.example.demo.Domain.Common.Dto.MemoDto">
        select * from tbl_memo
    </select>
<!--    반환 자료형이 다름 (Map<String,Object> > resultType="java.util.Map)-->
    <select id="selectAllMapXML" resultType="java.util.Map">
        select * from tbl_memo
    </select>

<!-- 동적 XML-->
    <select id="selectAllIfXML" resultType="java.util.Map" parameterType="java.util.Map">
        select * from tbl_memo
<!--        <if test="type!=null and type.equals('text')"> &lt;!&ndash; 어떤 조건식을 받았을 때 false면 문장 실행 x / true면 실행&ndash;&gt;-->
        <if test="type!=null and type.equals('text')"> <!-- choose 사용시 text뿐 아니라 writer도 접근 가능-->
            where text like concat('%',#{keyword},'%')
        </if>
    </select>
    <!-- choose 사용시 text뿐 아니라 writer도 접근 가능-->
    <select id="selectAllChooseXML" resultType="java.util.Map" parameterType="java.util.Map">
        select * from tbl_memo
        <where> <!--조건이 맞았을 경우 실행할 Choose문-->
            <if test="field !=null">
                <choose>
                    <when test="type=='id'">
                        id like concat ('%',#{keyword},'%')
                    </when>
                    <when test="type=='text'">
                        text like concat ('%',#{keyword},'%')
                    </when>
                    <when test="type=='writer'">
                        writer like concat ('%',#{keyword},'%')
                    </when>
                    <otherwise>
                        createAt like concat('%',#{keyword},'%')
                    </otherwise>
                </choose>
            </if>
        </where>
    </select>
    <select id="selectAllIfAndXML" resultType="java.util.Map" parameterType="java.util.Map">
        select * from tbl_memo
        <where> <!--조건이 맞았을 경우 실행할 Choose문-->
            <if test="field !=null">
                <if test="type.contains('id')">
                    id like concat ('%',#{keyword},'%')
                </if>
                <if test="type.contains('text')">
                    <if test="type == 'id'">AND</if> <!--위에서 조건식이 true일 경우 AND 연산자 삽입-->
                    text like concat ('%',#{keyword},'%')
                </if>
                <if test="type.contains('writer')">
                    <if test="(type.contains('id') or type.contains('text'))">AND</if> <!--위에서 조건식이 true일 경우 AND 연산자 삽입-->
                    writer like concat ('%',#{keyword},'%')
                </if>
            </if>
        </where>
    </select>
    <select id="selectForEachAnd" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT * FROM tbl_memo
        <where>
            <if test="fields != null and keyword != null">
                <foreach collection="fields" item="f" separator="AND">
                    <choose>
                        <when test="f == 'id'">
                            id LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="f == 'text'">
                            text LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="f == 'writer'">
                            writer LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                    </choose>
                </foreach>
            </if>
        </where>
    </select>


</mapper>